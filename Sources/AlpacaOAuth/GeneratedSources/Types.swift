// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
public protocol APIProtocol: Sendable {
    /// Bars
    ///
    /// The bars API returns aggregate historical data for the requested securities
    ///
    /// - Remark: HTTP `GET /v2/stocks/{symbol}/bars`.
    /// - Remark: Generated from `#/paths//v2/stocks/{symbol}/bars/get(getBarsStocks)`.
    func getBarsStocks(_ input: Operations.getBarsStocks.Input) async throws -> Operations.getBarsStocks.Output
    /// Trades
    ///
    /// The Trades API provides historcial trade data for a given ticker symbol on a specified date. Returns trades for the queried stock signal.
    ///
    /// - Remark: HTTP `GET /v2/stocks/{symbol}/trades`.
    /// - Remark: Generated from `#/paths//v2/stocks/{symbol}/trades/get(getTradesStocks)`.
    func getTradesStocks(_ input: Operations.getTradesStocks.Input) async throws -> Operations.getTradesStocks.Output
}

/// Convenience overloads for operation inputs.
extension APIProtocol {
    /// Bars
    ///
    /// The bars API returns aggregate historical data for the requested securities
    ///
    /// - Remark: HTTP `GET /v2/stocks/{symbol}/bars`.
    /// - Remark: Generated from `#/paths//v2/stocks/{symbol}/bars/get(getBarsStocks)`.
    public func getBarsStocks(
        path: Operations.getBarsStocks.Input.Path,
        query: Operations.getBarsStocks.Input.Query = .init(),
        headers: Operations.getBarsStocks.Input.Headers = .init()
    ) async throws -> Operations.getBarsStocks.Output {
        try await getBarsStocks(Operations.getBarsStocks.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Trades
    ///
    /// The Trades API provides historcial trade data for a given ticker symbol on a specified date. Returns trades for the queried stock signal.
    ///
    /// - Remark: HTTP `GET /v2/stocks/{symbol}/trades`.
    /// - Remark: Generated from `#/paths//v2/stocks/{symbol}/trades/get(getTradesStocks)`.
    public func getTradesStocks(
        path: Operations.getTradesStocks.Input.Path,
        query: Operations.getTradesStocks.Input.Query = .init(),
        headers: Operations.getTradesStocks.Input.Headers = .init()
    ) async throws -> Operations.getTradesStocks.Output {
        try await getTradesStocks(Operations.getTradesStocks.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
}

/// Server URLs defined in the OpenAPI document.
public enum Servers {
    /// Production
    public static func server1() throws -> Foundation.URL {
        try Foundation.URL(
            validatingOpenAPIServerURL: "https://data.alpaca.markets/v2",
            variables: []
        )
    }
    /// Sandbox
    public static func server2() throws -> Foundation.URL {
        try Foundation.URL(
            validatingOpenAPIServerURL: "https://data.sandbox.alpaca.markets/v2",
            variables: []
        )
    }
}

/// Types generated from the components section of the OpenAPI document.
public enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    public enum Schemas {}
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    public enum Parameters {}
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    public enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    public enum Responses {}
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    public enum Headers {}
}

/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
public enum Operations {
    /// Bars
    ///
    /// The bars API returns aggregate historical data for the requested securities
    ///
    /// - Remark: HTTP `GET /v2/stocks/{symbol}/bars`.
    /// - Remark: Generated from `#/paths//v2/stocks/{symbol}/bars/get(getBarsStocks)`.
    public enum getBarsStocks {
        public static let id: Swift.String = "getBarsStocks"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/bars/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The symbol to query for
                ///
                /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/bars/GET/path/symbol`.
                public var symbol: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - symbol: The symbol to query for
                public init(symbol: Swift.String) {
                    self.symbol = symbol
                }
            }
            public var path: Operations.getBarsStocks.Input.Path
            /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/bars/GET/query`.
            public struct Query: Sendable, Hashable {
                /// Filter data equal to or after this time in RFC-3339 format. Fractions of a second are not accepted.
                ///
                /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/bars/GET/query/start`.
                public var start: Swift.String?
                /// Filter data equal to or before this time in RFC-3339 format. Fractions of a second are not accepted.
                ///
                /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/bars/GET/query/end`.
                public var end: Swift.String?
                /// Timeframe for the aggregation. Values are customizeable, frequently used examples: 1Min, 15Min, 1Hour, 1Day.
                ///
                /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/bars/GET/query/timeframe`.
                public var timeframe: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - start: Filter data equal to or after this time in RFC-3339 format. Fractions of a second are not accepted.
                ///   - end: Filter data equal to or before this time in RFC-3339 format. Fractions of a second are not accepted.
                ///   - timeframe: Timeframe for the aggregation. Values are customizeable, frequently used examples: 1Min, 15Min, 1Hour, 1Day.
                public init(
                    start: Swift.String? = nil,
                    end: Swift.String? = nil,
                    timeframe: Swift.String? = nil
                ) {
                    self.start = start
                    self.end = end
                    self.timeframe = timeframe
                }
            }
            public var query: Operations.getBarsStocks.Input.Query
            /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/bars/GET/header`.
            public struct Headers: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/bars/GET/header/Apca-Api-Key-Id`.
                public var Apca_hyphen_Api_hyphen_Key_hyphen_Id: Swift.String?
                /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/bars/GET/header/Apca-Api-Secret-Key`.
                public var Apca_hyphen_Api_hyphen_Secret_hyphen_Key: Swift.String?
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getBarsStocks.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - Apca_hyphen_Api_hyphen_Key_hyphen_Id:
                ///   - Apca_hyphen_Api_hyphen_Secret_hyphen_Key:
                ///   - accept:
                public init(
                    Apca_hyphen_Api_hyphen_Key_hyphen_Id: Swift.String? = nil,
                    Apca_hyphen_Api_hyphen_Secret_hyphen_Key: Swift.String? = nil,
                    accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getBarsStocks.AcceptableContentType>] = .defaultValues()
                ) {
                    self.Apca_hyphen_Api_hyphen_Key_hyphen_Id = Apca_hyphen_Api_hyphen_Key_hyphen_Id
                    self.Apca_hyphen_Api_hyphen_Secret_hyphen_Key = Apca_hyphen_Api_hyphen_Secret_hyphen_Key
                    self.accept = accept
                }
            }
            public var headers: Operations.getBarsStocks.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.getBarsStocks.Input.Path,
                query: Operations.getBarsStocks.Input.Query = .init(),
                headers: Operations.getBarsStocks.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/bars/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/bars/GET/responses/200/content/application\/json`.
                    case json(OpenAPIRuntime.OpenAPIValueContainer)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: OpenAPIRuntime.OpenAPIValueContainer {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.getBarsStocks.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.getBarsStocks.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful response
            ///
            /// - Remark: Generated from `#/paths//v2/stocks/{symbol}/bars/get(getBarsStocks)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getBarsStocks.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.getBarsStocks.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Trades
    ///
    /// The Trades API provides historcial trade data for a given ticker symbol on a specified date. Returns trades for the queried stock signal.
    ///
    /// - Remark: HTTP `GET /v2/stocks/{symbol}/trades`.
    /// - Remark: Generated from `#/paths//v2/stocks/{symbol}/trades/get(getTradesStocks)`.
    public enum getTradesStocks {
        public static let id: Swift.String = "getTradesStocks"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/trades/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The symbol to query for
                ///
                /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/trades/GET/path/symbol`.
                public var symbol: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - symbol: The symbol to query for
                public init(symbol: Swift.String) {
                    self.symbol = symbol
                }
            }
            public var path: Operations.getTradesStocks.Input.Path
            /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/trades/GET/query`.
            public struct Query: Sendable, Hashable {
                /// Filter data equal to or after this time in RFC-3339 format. Fractions of a second are not accepted.
                ///
                /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/trades/GET/query/start`.
                public var start: Swift.String?
                /// Filter data equal to or before this time in RFC-3339 format. Fractions of a second are not accepted.
                ///
                /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/trades/GET/query/end`.
                public var end: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - start: Filter data equal to or after this time in RFC-3339 format. Fractions of a second are not accepted.
                ///   - end: Filter data equal to or before this time in RFC-3339 format. Fractions of a second are not accepted.
                public init(
                    start: Swift.String? = nil,
                    end: Swift.String? = nil
                ) {
                    self.start = start
                    self.end = end
                }
            }
            public var query: Operations.getTradesStocks.Input.Query
            /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/trades/GET/header`.
            public struct Headers: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/trades/GET/header/Apca-Api-Key-Id`.
                public var Apca_hyphen_Api_hyphen_Key_hyphen_Id: Swift.String?
                /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/trades/GET/header/Apca-Api-Secret-Key`.
                public var Apca_hyphen_Api_hyphen_Secret_hyphen_Key: Swift.String?
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getTradesStocks.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - Apca_hyphen_Api_hyphen_Key_hyphen_Id:
                ///   - Apca_hyphen_Api_hyphen_Secret_hyphen_Key:
                ///   - accept:
                public init(
                    Apca_hyphen_Api_hyphen_Key_hyphen_Id: Swift.String? = nil,
                    Apca_hyphen_Api_hyphen_Secret_hyphen_Key: Swift.String? = nil,
                    accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getTradesStocks.AcceptableContentType>] = .defaultValues()
                ) {
                    self.Apca_hyphen_Api_hyphen_Key_hyphen_Id = Apca_hyphen_Api_hyphen_Key_hyphen_Id
                    self.Apca_hyphen_Api_hyphen_Secret_hyphen_Key = Apca_hyphen_Api_hyphen_Secret_hyphen_Key
                    self.accept = accept
                }
            }
            public var headers: Operations.getTradesStocks.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.getTradesStocks.Input.Path,
                query: Operations.getTradesStocks.Input.Query = .init(),
                headers: Operations.getTradesStocks.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/trades/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v2/stocks/{symbol}/trades/GET/responses/200/content/application\/json`.
                    case json(OpenAPIRuntime.OpenAPIValueContainer)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: OpenAPIRuntime.OpenAPIValueContainer {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.getTradesStocks.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.getTradesStocks.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful response
            ///
            /// - Remark: Generated from `#/paths//v2/stocks/{symbol}/trades/get(getTradesStocks)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getTradesStocks.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.getTradesStocks.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
}
